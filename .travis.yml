language: cpp
sudo: false

# Use Linux unless specified otherwise
os: linux
dist: trusty

matrix:
  include:
    ##########################################################################
    # Clang on Linux
    ##########################################################################

    # clang-3.6 32
    - env: CLANG_VERSION=3.6 BUILD_TYPE=Debug ARCH=32
      addons: &clang36-32
        apt:
          packages:
            - clang-3.6
            - linux-libc-dev:i386
            - g++-5-multilib
            - gcc-5-multilib
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
    # - env: CLANG_VERSION=3.6 BUILD_TYPE=Release ARCH=32
    #   addons: *clang36-32

    # clang-3.6 64
    - env: CLANG_VERSION=3.6 BUILD_TYPE=Debug ARCH=64
      addons: &clang36-64
        apt:
          packages:
            - clang-3.6
            - g++-5
            - gcc-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
    # - env: CLANG_VERSION=3.6 BUILD_TYPE=Release ARCH=32
    #   addons: *clang36-64
      
    # clang-3.7 32
    - env: CLANG_VERSION=3.7 BUILD_TYPE=Debug ARCH=32
      addons: &clang37-32
        apt:
          packages:
            - clang-3.7
            - linux-libc-dev:i386
            - g++-5-multilib
            - gcc-5-multilib
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7

    # - env: CLANG_VERSION=3.7 BUILD_TYPE=Release ARCH=32
    #   addons: *clang37-32

    # clang-3.7 64
    - env: CLANG_VERSION=3.7 BUILD_TYPE=Debug ARCH=64
      os: linux
      addons: &clang37-64
        apt:
          packages:
            - clang-3.7
            - g++-5
            - gcc-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7

    # - env: CLANG_VERSION=3.7 BUILD_TYPE=Release ARCH=64
    #   addons: *clang37-64

    # clang-3.8 32
    - env: CLANG_VERSION=3.8 BUILD_TYPE=Debug ARCH=32
      addons: &clang38-32
        apt:
          packages:
            - clang-3.8
            - linux-libc-dev:i386
            - g++-5-multilib
            - gcc-5-multilib
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8

    # - env: CLANG_VERSION=3.8 BUILD_TYPE=Release ARCH=32
    #   addons: *clang38-32

    # clang-3.8 64
    - env: CLANG_VERSION=3.8 BUILD_TYPE=Debug ARCH=64
      addons: &clang38-64
        apt:
          packages:
            - clang-3.8
            - g++-5
            - gcc-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8

    # - env: CLANG_VERSION=3.8 BUILD_TYPE=Release ARCH=64
    #   addons: *clang38-64

    # clang-3.9 32
    - env: CLANG_VERSION=3.9 BUILD_TYPE=Debug ARCH=32
      addons: &clang39-32
        apt:
          packages:
            - clang-3.9
            - linux-libc-dev:i386
            - g++-5-multilib
            - gcc-5-multilib
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.9

    # - env: CLANG_VERSION=3.9 BUILD_TYPE=Release ARCH=32
    #   addons: *clang39-32

    # clang-3.9 64
    - env: CLANG_VERSION=3.9 BUILD_TYPE=Debug ARCH=64
      addons: &clang39-64
        apt:
          packages:
            - clang-3.9
            - g++-5
            - gcc-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.9

    # - env: CLANG_VERSION=3.9 BUILD_TYPE=Release ARCH=64
    #   addons: *clang39-64

    # clang-4.0 32
    - env: CLANG_VERSION=4.0 BUILD_TYPE=Debug ARCH=32
      addons: &clang40-32
        apt:
          packages:
            - clang-4.0
            - linux-libc-dev:i386
            - g++-5-multilib
            - gcc-5-multilib
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0

    # - env: CLANG_VERSION=4.0 BUILD_TYPE=Release ARCH=32
    #   addons: *clang40-32

    # clang-4.0 64
    - env: CLANG_VERSION=4.0 BUILD_TYPE=Debug ARCH=64
      addons: &clang40-64
        apt:
          packages:
            - clang-4.0
            - g++-5
            - gcc-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0

    # - env: CLANG_VERSION=4.0 BUILD_TYPE=Release ARCH=64
    #   addons: *clang40-64

    # clang-5.0 32
    - env: CLANG_VERSION=5.0 BUILD_TYPE=Debug ARCH=32
      addons: &clang50-32
        apt:
          packages:
            - clang-5.0
            - linux-libc-dev:i386
            - g++-5-multilib
            - gcc-5-multilib
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

    # - env: CLANG_VERSION=5.0 BUILD_TYPE=Release ARCH=32
    #   addons: *clang50-32

    # clang-5.0 64
    - env: CLANG_VERSION=5.0 BUILD_TYPE=Debug ARCH=64
      addons: &clang50-64
        apt:
          packages:
            - clang-5.0
            - g++-5
            - gcc-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

    # - env: CLANG_VERSION=5.0 BUILD_TYPE=Release ARCH=64
    #   addons: *clang50-64

    # clang-6.0 32
    - env: CLANG_VERSION=6.0 BUILD_TYPE=Debug ARCH=32
      addons: &clang60-32
        apt:
          packages:
            - clang-6.0
            - linux-libc-dev:i386
            - g++-5-multilib
            - gcc-5-multilib
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

    - env: CLANG_VERSION=6.0 BUILD_TYPE=Release ARCH=32
      addons: *clang60-32

    # clang-6.0 64
    - env: CLANG_VERSION=6.0 BUILD_TYPE=Debug ARCH=64
      addons: &clang60-64
        apt:
          packages:
            - clang-6.0
            - g++-5
            - gcc-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

    - env: CLANG_VERSION=6.0 BUILD_TYPE=Release ARCH=64
      addons: *clang60-64

    ##########################################################################
    # GCC on Linux
    ##########################################################################
    # gcc-4.9 32
    - env: GCC_VERSION=4.9 BUILD_TYPE=Debug ARCH=32
      addons: &gcc49-32
        apt:
          packages:
            - linux-libc-dev:i386
            - g++-4.9-multilib
            - gcc-4.9-multilib
          sources:
            - ubuntu-toolchain-r-test
    # - env: GCC_VERSION=4.9 BUILD_TYPE=Release ARCH=32
    #   addons: *gcc49-32

    # gcc-4.9 64
    - env: GCC_VERSION=4.9 BUILD_TYPE=Debug ARCH=64
      addons: &gcc49-64
        apt:
          packages:
            - g++-4.9
            - gcc-4.9
          sources:
            - ubuntu-toolchain-r-test
    # - env: GCC_VERSION=4.9 BUILD_TYPE=Release ARCH=64
    #   addons: *gcc49-64

    # gcc-5 32
    - env: GCC_VERSION=5 BUILD_TYPE=Debug ARCH=32
      addons: &gcc5-32
        apt:
          packages:
            - linux-libc-dev:i386
            - g++-5-multilib
            - gcc-5-multilib
          sources:
            - ubuntu-toolchain-r-test
    # - env: GCC_VERSION=5 BUILD_TYPE=Release ARCH=32
    #   addons: *gcc5-32

    # gcc-5 64
    - env: GCC_VERSION=5 BUILD_TYPE=Debug ARCH=64
      addons: &gcc5-64
        apt:
          packages:
            - g++-5
            - gcc-5
          sources:
            - ubuntu-toolchain-r-test
    # - env: GCC_VERSION=5 BUILD_TYPE=Release ARCH=64
    #   addons: *gcc5-64

    # gcc-6 32
    - env: GCC_VERSION=6 BUILD_TYPE=Debug ARCH=32
      addons: &gcc6-32
        apt:
          packages:
            - rpm
            - linux-libc-dev:i386
            - g++-6-multilib
            - gcc-6-multilib
            - doxygen
          sources:
            - ubuntu-toolchain-r-test
    # - env: GCC_VERSION=6 BUILD_TYPE=Release ARCH=32
    #   addons: *gcc6-32

    # gcc-6 64
    - env: GCC_VERSION=6 BUILD_TYPE=Debug ARCH=64
      addons: &gcc6-64
        apt:
          packages:
            - rpm
            - g++-6
            - gcc-6
            - doxygen
          sources:
            - ubuntu-toolchain-r-test
    # - env: GCC_VERSION=6 BUILD_TYPE=Release ARCH=64
    #   addons: *gcc6-64

    # gcc-7 32
    - env: GCC_VERSION=7 BUILD_TYPE=Debug ARCH=32
      addons: &gcc7-32
        apt:
          packages:
            - rpm
            - linux-libc-dev:i386
            - g++-7-multilib
            - gcc-7-multilib
            - doxygen
          sources:
            - ubuntu-toolchain-r-test
    - env: GCC_VERSION=7 BUILD_TYPE=Release ARCH=32
      addons: *gcc7-32

    # gcc-7 64
    - env: GCC_VERSION=7 BUILD_TYPE=Debug ARCH=64
      addons: &gcc7-64
        apt:
          packages:
            - rpm
            - g++-7
            - gcc-7
            - doxygen
          sources:
            - ubuntu-toolchain-r-test
    - env: GCC_VERSION=7 BUILD_TYPE=Release ARCH=64
      addons: *gcc7-64

branches:
  only:
    - develop
    - master
    - /^v\d+\.\d+\.\d+$/

before_install:
  - |
    if [ -n "$GCC_VERSION" ]; then
      export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}" GCOV="gcov-${GCC_VERSION}";
    fi
  - |
    if [ -n "$CLANG_VERSION" ]; then
      export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}";
    fi

install:
  # install latest LCOV (1.9 was failing)
  - |
    if [[ $TRAVIS_OS_NAME != "osx" ]]; then
      cd ${TRAVIS_BUILD_DIR}
      wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
      tar xf lcov_1.11.orig.tar.gz
      sudo make -C lcov-1.11/ install
      gem install coveralls-lcov
      lcov --version
    fi
  # Travis machines have 2 cores
  - JOBS=2

  ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
  - CMAKE_VERSION=3.7.2
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi
  - cmake --version
  
before_script:
  #- if [[ $TRAVIS_OS_NAME == "osx" ]]; then brew update > /dev/null && brew install mariadb && mysql.server start; fi
  - |
    if [[ $TRAVIS_OS_NAME != "osx" ]]; then
      mysql -e 'create database matador_test;';
    fi
  - mkdir build
  - cd build
  - |
    if [ "$GCOV" == "gcov-5" ] && [ "$BUILD_TYPE" == "Debug" ] && [ "$ARCH" == "64" ]; then
      cmake -DCMAKE_CXX_COMPILER=${COMPILER} -DARCH=${ARCH} -DGCOV_BINARY=${GCOV} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCOVERAGE=true -DMATADOR_ODBC_TEST=false -DMYSQL_CONNECTION_STRING:STRING="mysql://root@127.0.0.1/matador_test" ..;
      lcov --directory include --directory src --directory test --zerocounters
    else
      cmake -DCMAKE_CXX_COMPILER=${COMPILER} -DARCH=${ARCH} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DMATADOR_ODBC_TEST=false -DMYSQL_CONNECTION_STRING:STRING="mysql://root@127.0.0.1/matador_test" ..;
    fi

script:
  - make
  - make test ARGS=-V

after_success:
  - |
    if [ "$GCOV" == "gcov-5" ] && [ "$BUILD_TYPE" == "Debug" ] && [ "$ARCH" == "64" ]; then
      cd ${TRAVIS_BUILD_DIR}
      type $GCOV
      lcov --no-external --base-directory ${TRAVIS_BUILD_DIR} --directory build/src --directory build/test --capture --gcov-tool `which $GCOV` --output-file coverage.info
      lcov --remove coverage.info 'build/test/*' 'build/src/*' --gcov-tool `which $GCOV` --output-file coverage.info
      lcov --list coverage.info
      coveralls-lcov --repo-token=${COVERALLS_TOKEN} coverage.info
    fi

before_deploy:
  - cd ${TRAVIS_BUILD_DIR}
  - cmake --build build --target web
  - cmake --build build --target package
  - export RELEASE_TGZ_FILE=$(ls Package/*.tar.gz)
  - export RELEASE_DEB_FILE=$(ls Package/*.deb)
  - export RELEASE_RPM_FILE=$(ls Package/*.rpm)
  - export RELEASE_PKG_FILE=$(ls Package/*.pkg.tar.xz)
  - echo "deploying $RELEASE_TGZ_FILE, $RELEASE_DEB_FILE $RELEASE_PKG_FILE and $RELEASE_RPM_FILE to GitHub releases"

deploy:
  provider: releases
  api_key: ${GITHUB_TOKEN}
  file:
    - "${RELEASE_TGZ_FILE}"
    - "${RELEASE_DEB_FILE}"
    - "${RELEASE_RPM_FILE}"
    - "${RELEASE_PKG_FILE}"
  skip_cleanup: true
  on:
    tags: true
    condition: "$GCC_VERSION = 6 && $BUILD_TYPE = Release"
    all_branches: true

notifications:
  email:
    recipients:
      - sascha.kuehl@gmx.net
  on_success: change # [always|never|change] # default: change
  on_failure: always # [always|never|change] # default: always
